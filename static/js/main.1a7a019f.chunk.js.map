{"version":3,"sources":["components/Dialog.jsx","components/Table.jsx","App.js","index.js"],"names":["MaxWidthDialog","UserId","React","useState","open","setOpen","fullWidth","maxWidth","userData","setUserData","useEffect","a","axios","response","console","log","data","fetchbids","handleClose","Fragment","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","className","src","avatarUrl","alt","firstname","lastname","hasPremium","email","phone","class","id","scope","bids","map","y","created","carTitle","amount","DialogActions","Table","setBids","startPage","setStartPage","endPage","setEndPage","showMinBids","arr","value","push","Math","min","bidsToShow","maxAmount","max","IconButton","aria-label","slice","x","App","getData","fetchJobs","defaults","baseURL","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a7a019f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\n\r\nexport default function MaxWidthDialog({UserId}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  \r\n  const [userData, setUserData] = useState({});\r\n  useEffect(() => { \r\n    const fetchbids = async () => {\r\n\r\n      const response = await axios(`/merchants/${UserId}`);\r\n      console.log(response.data);\r\n      setUserData(response.data);\r\n    };\r\n \r\n    fetchbids();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Show Bids\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n      <div className=\"conatiner card m-2 p-2\">\r\n            <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                  <p><img src={userData.avatarUrl} alt=\"User_image\" className=\"avatar2\" /> {userData.firstname} {userData.lastname}</p>\r\n                  \r\n                  </div>\r\n                  <div className=\"col-6 pt-3\">\r\n                  <p>{userData.hasPremium ? \"Active\" : \"Not Active\"}</p>\r\n                  <p>{userData.email}</p>\r\n                  <p>{userData.phone}</p>\r\n                  </div>\r\n                              </div>\r\n                              <table class=\"css-serial table table-hover\">\r\n                  <thead>\r\n                  <tr id=\"para\">\r\n                        <th scope=\"col\">S No.</th>\r\n                        <th scope=\"col\">Id</th>\r\n                        <th scope=\"col\">Created</th>\r\n                        <th scope=\"col\">Car Title</th>\r\n                        <th scope=\"col\">Amount</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {\r\n                        userData?.bids?.map(y => \r\n                        \r\n                  <tr id=\"para\">  \r\n                        <td>)</td>\r\n                        <th scope=\"row\">{y.id}</th>\r\n                        <td>{y.created}</td>\r\n                        <td>{y.carTitle}</td>\r\n                        <td>{y.amount}</td>\r\n                  </tr>\r\n                  )}\r\n                  </tbody>\r\n                  </table>\r\n                        </div>\r\n       \r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React,{useState} from 'react';\r\nimport Dialog from \"./Dialog\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\n\r\nconst Table = ({data}) => {\r\n\r\n      const [bids, setBids] = useState(false);\r\n      const [startPage, setStartPage] = useState(0);\r\n      const [endPage, setEndPage] = useState(5);\r\n  \r\n\r\n      const showMinBids = (arr) => {\r\n            const amount = [];\r\n            arr.map(value => amount.push(value.amount))\r\n            return Math.min(...amount)\r\n      }\r\n      const bidsToShow = (arr) => {\r\n            const maxAmount = [];\r\n            arr.map(value => maxAmount.push(value.amount))\r\n            return Math.max(...maxAmount)\r\n\r\n      }\r\n      const Previous = () => {\r\n            setStartPage(startPage - 5)\r\n            setEndPage(endPage - 5);\r\n      }\r\n\r\n      const Next = () => {\r\n            setStartPage(startPage + 5)\r\n            setEndPage(endPage + 5);\r\n      }\r\n\r\n      const pagination = () => {\r\n\r\n            return data.slice(startPage,endPage)\r\n      }    \r\n      \r\n      const sortbids = () => {\r\n            setBids(true);\r\n      }\r\n      const sortDownbids = () => {\r\n            setBids(false);\r\n      }\r\n      return (\r\n            <>\r\n            <div className=\"container justify-content-center\">\r\n                 \r\n                              <table className=\"css-serial table table-hover\">\r\n                              <table className=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                          <th scope=\"col\">S. No.</th>\r\n                                          <th scope=\"col\">Customer </th>\r\n                                          <th scope=\"col\">Email</th>\r\n                                          <th scope=\"col\">Phone</th>\r\n                                          <th scope=\"col\">Premium</th>\r\n                                          <th scope=\"col\">Max/Min Bid \r\n                                          \r\n                                          {bids ? \r\n                                          <IconButton color=\"primary\" aria-label=\"add an alarm\">\r\n                                          <ArrowUpwardIcon onClick={() => sortDownbids()}/>\r\n                                          </IconButton>\r\n                                           : \r\n                                           <IconButton color=\"secondary\" aria-label=\"add an alarm\">\r\n                                          <ArrowDownwardIcon onClick={() => sortbids()}/>\r\n                                          </IconButton>\r\n                                           }\r\n                                           \r\n                                           </th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {\r\n                                          pagination().map(x => \r\n                                    \r\n                                    <tr id=\"para\" key={x.id}> \r\n                                          <td>)</td>\r\n                                          <th scope=\"row\">\r\n                                          <img src={x.avatarUrl} alt=\"User_image\" className=\"avatar\" />\r\n                                           {x.firstname} {x.lastname} </th>\r\n                                          <td>{x.email}</td>\r\n                                          <td>{x.phone}</td>\r\n                                          <td>{x.hasPremium ? \"Active\" : \"Not Active\"}</td>\r\n                                          {bids ? \r\n                                          <td>{showMinBids(x.bids)} <br />\r\n                                          <Dialog UserId={x.id}/>\r\n                                          </td> \r\n                                          :\r\n                                          <td>{bidsToShow(x.bids)} <br />\r\n                                          <Dialog UserId={x.id}/>\r\n                                          </td> \r\n                                          }\r\n                                    </tr>\r\n\r\n                                    )}\r\n                                    </tbody>\r\n                                    </table>\r\n                              </table>\r\n                              <div className=\"row justify-content-center\">\r\n                                    <duv className=\"col-4\">\r\n                                          <IconButton color=\"primary\" aria-label=\"add an alarm\">\r\n                                          <NavigateBeforeIcon onClick={() => Previous()}/>\r\n                                          </IconButton>\r\n                                          <IconButton color=\"primary\" aria-label=\"add an alarm\">\r\n                                          <NavigateNextIcon onClick={() => Next()}/>\r\n                                          </IconButton>\r\n                                    </duv>\r\n                              </div>\r\n            </div>\r\n                  \r\n            </>\r\n      )\r\n}\r\n\r\nexport default Table\r\n","import React,{useState, useEffect} from 'react'\nimport axios from \"axios\";\nimport Table from \"./components/Table\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\n\n\nconst App = () => {\n  const [data, getData] = useState([]);\n  useEffect(() => { \n    const fetchJobs = async () => {\n\n      const response = await axios('/merchants');\n      console.log(response.data);\n      getData(response.data);\n    };\n \n    fetchJobs();\n  }, []);\n\n  return (\n    <>\n    <div className=\"container card shadow-lg rounded m-5 p-2 justify-content-center\">\n    <div className=\"row  m-2 p-2 justify-content-center\">\n    <h1 id=\"heading\" className=\"text-start\">Trav Clan Assignment</h1>\n    </div>\n    <Table data={data} />\n    </div>   \n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from \"axios\";\n\n\naxios.defaults.baseURL = 'https://intense-tor-76305.herokuapp.com';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}